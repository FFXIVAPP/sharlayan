<mah:MetroWindow
    x:Class="BootstrappedWPF.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:models="clr-namespace:BootstrappedWPF.Models"
    xmlns:properties="clr-namespace:BootstrappedWPF.Properties"
    xmlns:viewmodels="clr-namespace:BootstrappedWPF.ViewModels"
    Title="{Binding AppTitle, Source={StaticResource AppViewModel}}"
    Width="{Binding Width, Mode=TwoWay, Source={x:Static properties:Settings.Default}}"
    Height="{Binding Height, Mode=TwoWay, Source={x:Static properties:Settings.Default}}"
    d:DataContext="{d:DesignInstance viewmodels:MainWindowViewModel}"
    d:DesignHeight="600"
    d:DesignWidth="800"
    Background="{DynamicResource MaterialDesignPaper}"
    BorderBrush="{DynamicResource PrimaryHueDarkBrush}"
    BorderThickness="1"
    Closing="MainWindow_OnClosing"
    ContentRendered="MainWindow_OnContentRendered"
    FontFamily="{materialDesign:MaterialDesignFont}"
    Foreground="{DynamicResource MaterialDesignBody}"
    GlowBrush="{DynamicResource MahApps.Brushes.Accent}"
    Left="{Binding Left, Mode=TwoWay, Source={x:Static properties:Settings.Default}}"
    Loaded="MainWindow_OnLoaded"
    ResizeMode="CanResizeWithGrip"
    Top="{Binding Top, Mode=TwoWay, Source={x:Static properties:Settings.Default}}"
    WindowStartupLocation="Manual"
    mc:Ignorable="d">

    <mah:MetroWindow.LeftWindowCommands>
        <mah:WindowCommands>
            <Image
                Width="20"
                Margin="4,0"
                Source="pack://application:,,,/Resources/logo.ico" />
        </mah:WindowCommands>
    </mah:MetroWindow.LeftWindowCommands>

    <Window.Resources>
        <ResourceDictionary>
            <DataTemplate DataType="{x:Type models:LanguageItem}">
                <Button
                    Command="{Binding RelativeSource={RelativeSource AncestorType=Window, Mode=FindAncestor}, Path=DataContext.UpdateInterfaceLanguage}"
                    CommandParameter="{Binding}"
                    DataContext="{Binding}">
                    <StackPanel HorizontalAlignment="Left" Orientation="Horizontal">
                        <Image
                            Width="20"
                            RenderOptions.BitmapScalingMode="HighQuality"
                            Source="{Binding ImageURI}" />
                        <TextBlock Margin="5,0" Text="{Binding Title}" />
                    </StackPanel>
                </Button>
            </DataTemplate>
        </ResourceDictionary>
    </Window.Resources>

    <DockPanel>
        <materialDesign:ColorZone
            Padding="8"
            DockPanel.Dock="Top"
            Mode="PrimaryDark">
            <DockPanel>
                <StackPanel Orientation="Horizontal">
                    <Button
                        Margin="8,0,0,0"
                        materialDesign:RippleAssist.Feedback="{Binding RelativeSource={RelativeSource Self}, Path=Foreground, Converter={StaticResource BrushRoundConverter}}"
                        Command="{Binding HomeCommand}"
                        Content="{materialDesign:PackIcon Kind=Home,
                                                          Size=24}"
                        Foreground="{Binding RelativeSource={RelativeSource AncestorType={x:Type FrameworkElement}}, Path=(TextElement.Foreground)}"
                        Style="{DynamicResource MaterialDesignToolButton}"
                        ToolTip="{Binding Locale[MainWindow_HomeButtonToolTip], Source={StaticResource AppViewModel}}" />
                    <Button
                        Margin="8,0,0,0"
                        materialDesign:RippleAssist.Feedback="{Binding RelativeSource={RelativeSource Self}, Path=Foreground, Converter={StaticResource BrushRoundConverter}}"
                        Command="{Binding SettingsCommand}"
                        Content="{materialDesign:PackIcon Kind=Settings,
                                                          Size=24}"
                        Foreground="{Binding RelativeSource={RelativeSource AncestorType={x:Type FrameworkElement}}, Path=(TextElement.Foreground)}"
                        Style="{DynamicResource MaterialDesignToolButton}"
                        ToolTip="{Binding Locale[MainWindow_SettingsButtonToolTip], Source={StaticResource AppViewModel}}" />
                    <Button
                        Margin="8,0,0,0"
                        materialDesign:RippleAssist.Feedback="{Binding RelativeSource={RelativeSource Self}, Path=Foreground, Converter={StaticResource BrushRoundConverter}}"
                        Command="{Binding ChatCommand}"
                        Content="{materialDesign:PackIcon Kind=Chat,
                                                          Size=24}"
                        Foreground="{Binding RelativeSource={RelativeSource AncestorType={x:Type FrameworkElement}}, Path=(TextElement.Foreground)}"
                        Style="{DynamicResource MaterialDesignToolButton}"
                        ToolTip="{Binding Locale[MainWindow_ChatLogButtonToolTip], Source={StaticResource AppViewModel}}" />
                    <Button
                        Margin="8,0,0,0"
                        materialDesign:RippleAssist.Feedback="{Binding RelativeSource={RelativeSource Self}, Path=Foreground, Converter={StaticResource BrushRoundConverter}}"
                        Command="{Binding DebugCommand}"
                        Content="{materialDesign:PackIcon Kind=DebugStepInto,
                                                          Size=24}"
                        Foreground="{Binding RelativeSource={RelativeSource AncestorType={x:Type FrameworkElement}}, Path=(TextElement.Foreground)}"
                        Style="{DynamicResource MaterialDesignToolButton}"
                        ToolTip="{Binding Locale[MainWindow_DebugButtonToolTip], Source={StaticResource AppViewModel}}" />
                </StackPanel>

                <materialDesign:PopupBox
                    DockPanel.Dock="Right"
                    PlacementMode="BottomAndAlignRightEdges"
                    StaysOpen="False">
                    <StackPanel Cursor="Hand" Orientation="Vertical">
                        <ItemsControl ItemsSource="{Binding InterfaceLanguages, Mode=OneTime}">
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <StackPanel />
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                        </ItemsControl>
                    </StackPanel>
                </materialDesign:PopupBox>

                <Border
                    Height="18"
                    BorderBrush="MintCream"
                    BorderThickness="1"
                    DockPanel.Dock="Right">
                    <Image
                        Height="16"
                        RenderOptions.BitmapScalingMode="HighQuality"
                        Source="{Binding SelectedInterfaceLanguage.ImageURI}" />
                </Border>

                <TextBlock
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    FontSize="22"
                    Text="" />
            </DockPanel>
        </materialDesign:ColorZone>

        <Grid>
            <materialDesign:Transitioner AutoApplyTransitionOrigins="True" SelectedIndex="{Binding SelectedIndex}">
                <materialDesign:TransitionerSlide>
                    <materialDesign:TransitionerSlide.BackwardWipe>
                        <materialDesign:CircleWipe />
                    </materialDesign:TransitionerSlide.BackwardWipe>
                    <ContentControl
                        Margin="{Binding MarginRequirement, FallbackValue=16}"
                        Content="{Binding Content, UpdateSourceTrigger=PropertyChanged, FallbackValue={x:Null}}"
                        DataContext="{Binding HomeView}" />
                </materialDesign:TransitionerSlide>
                <materialDesign:TransitionerSlide>
                    <materialDesign:TransitionerSlide.BackwardWipe>
                        <materialDesign:CircleWipe />
                    </materialDesign:TransitionerSlide.BackwardWipe>
                    <ContentControl
                        Margin="{Binding MarginRequirement, FallbackValue=16}"
                        Content="{Binding Content, UpdateSourceTrigger=PropertyChanged, FallbackValue={x:Null}}"
                        DataContext="{Binding SettingsView}" />
                </materialDesign:TransitionerSlide>
                <materialDesign:TransitionerSlide>
                    <materialDesign:TransitionerSlide.BackwardWipe>
                        <materialDesign:CircleWipe />
                    </materialDesign:TransitionerSlide.BackwardWipe>
                    <ContentControl
                        Margin="{Binding MarginRequirement, FallbackValue=16}"
                        Content="{Binding Content, UpdateSourceTrigger=PropertyChanged, FallbackValue={x:Null}}"
                        DataContext="{Binding ChatView}" />
                </materialDesign:TransitionerSlide>
                <materialDesign:TransitionerSlide>
                    <materialDesign:TransitionerSlide.BackwardWipe>
                        <materialDesign:CircleWipe />
                    </materialDesign:TransitionerSlide.BackwardWipe>
                    <ContentControl
                        Margin="{Binding MarginRequirement, FallbackValue=16}"
                        Content="{Binding Content, UpdateSourceTrigger=PropertyChanged, FallbackValue={x:Null}}"
                        DataContext="{Binding DebugView}" />
                </materialDesign:TransitionerSlide>
            </materialDesign:Transitioner>
        </Grid>
    </DockPanel>
</mah:MetroWindow>