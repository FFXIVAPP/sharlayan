<Application
    x:Class="BootstrappedWPF.App"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:app="clr-namespace:BootstrappedWPF"
    xmlns:controls="https://spiegelp.github.io/MaterialDesignExtensions/winfx/xaml"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:options="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options"
    xmlns:viewModels="clr-namespace:BootstrappedWPF.ViewModels"
    StartupUri="MainWindow.xaml">

    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <!--  Material Design  -->
                <materialDesign:BundledTheme
                    BaseTheme="Inherit"
                    ColorAdjustment="{materialDesign:ColorAdjustment}"
                    PrimaryColor="Red"
                    SecondaryColor="Orange" />
                <ResourceDictionary
                    Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Defaults.xaml" />
                <!-- <ResourceDictionary Source="pack://application:,,,/MaterialDesignExtensions;component/Themes/Generic.xaml" /> -->

            </ResourceDictionary.MergedDictionaries>

            <Style x:Key="MaterialDesignTabControl" TargetType="{x:Type TabControl}">
                <Setter Property="controls:TabControlAssist.TabHeaderHorizontalAlignment" Value="Left" />
                <Setter Property="controls:TabControlAssist.TabHeaderHighlightBrush"
                        Value="{DynamicResource PrimaryHueMidBrush}" />
                <Setter Property="controls:TabControlAssist.TabHeaderInactiveBrush"
                        Value="{DynamicResource MaterialDesignBodyLight}" />
                <Setter Property="controls:TabControlAssist.TabHeaderInactiveOpacity" Value="1" />
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TabControl}">
                            <ControlTemplate.Resources>
                                <Style TargetType="{x:Type TabItem}">
                                    <Setter Property="Background" Value="Transparent" />
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type TabItem}">
                                                <ControlTemplate.Resources>
                                                    <Storyboard x:Key="OnSelected">
                                                        <DoubleAnimationUsingKeyFrames
                                                            Storyboard.TargetName="clickBorder"
                                                            Storyboard.TargetProperty="Opacity">
                                                            <DiscreteDoubleKeyFrame KeyTime="0" Value="0" />
                                                            <EasingDoubleKeyFrame KeyTime="0:0:0.15" Value="0.12">
                                                                <EasingDoubleKeyFrame.EasingFunction>
                                                                    <CircleEase EasingMode="EaseOut" />
                                                                </EasingDoubleKeyFrame.EasingFunction>
                                                            </EasingDoubleKeyFrame>
                                                            <DiscreteDoubleKeyFrame KeyTime="0:0:0.35" Value="0.12" />
                                                            <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="0">
                                                                <EasingDoubleKeyFrame.EasingFunction>
                                                                    <SineEase EasingMode="EaseOut" />
                                                                </EasingDoubleKeyFrame.EasingFunction>
                                                            </EasingDoubleKeyFrame>
                                                        </DoubleAnimationUsingKeyFrames>
                                                        <DoubleAnimationUsingKeyFrames
                                                            Storyboard.TargetName="clickBorder"
                                                            Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
                                                            <EasingDoubleKeyFrame KeyTime="0:0:0.0" Value="0" />
                                                            <EasingDoubleKeyFrame KeyTime="0:0:0.15" Value="1" />
                                                        </DoubleAnimationUsingKeyFrames>
                                                        <DoubleAnimationUsingKeyFrames
                                                            Storyboard.TargetName="clickBorder"
                                                            Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
                                                            <EasingDoubleKeyFrame KeyTime="0:0:0.0" Value="0" />
                                                            <EasingDoubleKeyFrame KeyTime="0:0:0.15" Value="1" />
                                                        </DoubleAnimationUsingKeyFrames>
                                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="border"
                                                            Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
                                                            <EasingDoubleKeyFrame KeyTime="0:0:0.0" Value="0" />
                                                            <EasingDoubleKeyFrame KeyTime="0:0:0.15" Value="1" />
                                                        </DoubleAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                    <Storyboard x:Key="OnDeselected">
                                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="border"
                                                            Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
                                                            <EasingDoubleKeyFrame KeyTime="0:0:0.0" Value="1" />
                                                            <EasingDoubleKeyFrame KeyTime="0:0:0.15" Value="0" />
                                                        </DoubleAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                </ControlTemplate.Resources>
                                                <Grid
                                                    x:Name="ItemContent"
                                                    HorizontalAlignment="Stretch"
                                                    VerticalAlignment="Stretch"
                                                    Background="{TemplateBinding Background}">

                                                    <Border
                                                        x:Name="clickBorder"
                                                        Background="{Binding Path=(controls:TabControlAssist.TabHeaderHighlightBrush), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TabControl}}}"
                                                        Opacity="0"
                                                        RenderTransformOrigin="0.5,0.5">
                                                        <Border.RenderTransform>
                                                            <TransformGroup>
                                                                <ScaleTransform ScaleX="0" />
                                                                <SkewTransform />
                                                                <RotateTransform />
                                                                <TranslateTransform />
                                                            </TransformGroup>
                                                        </Border.RenderTransform>
                                                    </Border>
                                                    <ContentPresenter
                                                        x:Name="headerContent"
                                                        Margin="10"
                                                        HorizontalAlignment="Center"
                                                        VerticalAlignment="Center"
                                                        ContentSource="Header"
                                                        RecognizesAccessKey="True"
                                                        TextBlock.FontSize="{Binding Path=(controls:TabControlAssist.TabHeaderFontSize), RelativeSource={RelativeSource TemplatedParent}}"
                                                        TextBlock.FontWeight="{Binding Path=(controls:TabControlAssist.TabHeaderFontWeight), RelativeSource={RelativeSource TemplatedParent}}"
                                                        TextBlock.Foreground="{Binding Path=(controls:TabControlAssist.TabHeaderForeground), RelativeSource={RelativeSource TemplatedParent}}">
                                                        <ContentPresenter.Style>
                                                            <Style TargetType="ContentPresenter">
                                                                <Style.Triggers>
                                                                    <DataTrigger
                                                                        Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource TemplatedParent}}"
                                                                        Value="False">
                                                                        <Setter Property="Opacity"
                                                                            Value="{Binding Path=(controls:TabControlAssist.TabHeaderInactiveOpacity), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TabControl}}}" />
                                                                    </DataTrigger>
                                                                    <DataTrigger
                                                                        Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource TemplatedParent}}"
                                                                        Value="True">
                                                                        <Setter Property="Opacity" Value="1" />
                                                                    </DataTrigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </ContentPresenter.Style>
                                                    </ContentPresenter>
                                                    <Border
                                                        x:Name="border"
                                                        Height="2"
                                                        Padding="8"
                                                        HorizontalAlignment="Stretch"
                                                        VerticalAlignment="Bottom"
                                                        Background="{Binding Path=(controls:TabControlAssist.TabHeaderHighlightBrush), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TabControl}}}"
                                                        RenderTransformOrigin="0.5,0.5">
                                                        <Border.RenderTransform>
                                                            <TransformGroup>
                                                                <ScaleTransform ScaleX="0" />
                                                                <SkewTransform />
                                                                <RotateTransform />
                                                                <TranslateTransform />
                                                            </TransformGroup>
                                                        </Border.RenderTransform>
                                                    </Border>
                                                </Grid>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsSelected" Value="True">
                                                        <Setter
                                                            Property="controls:TabControlAssist.TabHeaderForeground"
                                                            Value="{Binding Path=(controls:TabControlAssist.TabHeaderHighlightBrush), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TabControl}}}" />
                                                        <Trigger.EnterActions>
                                                            <BeginStoryboard Storyboard="{StaticResource OnSelected}" />
                                                        </Trigger.EnterActions>
                                                        <Trigger.ExitActions>
                                                            <BeginStoryboard Storyboard="{StaticResource OnDeselected}" />
                                                        </Trigger.ExitActions>
                                                    </Trigger>
                                                    <Trigger Property="IsSelected" Value="False">
                                                        <Setter
                                                            Property="controls:TabControlAssist.TabHeaderForeground"
                                                            Value="{Binding Path=(controls:TabControlAssist.TabHeaderInactiveBrush), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TabControl}}}" />
                                                    </Trigger>
                                                    <Trigger Property="IsEnabled" Value="False">
                                                        <Setter Property="Opacity" Value="0.23" />
                                                    </Trigger>

                                                    <Trigger Property="TabStripPlacement" Value="Bottom" />
                                                    <Trigger Property="TabStripPlacement" Value="Left">
                                                        <Setter TargetName="ItemContent" Property="LayoutTransform">
                                                            <Setter.Value>
                                                                <RotateTransform Angle="270" />
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Trigger>
                                                    <Trigger Property="TabStripPlacement" Value="Right">
                                                        <Setter TargetName="ItemContent" Property="LayoutTransform">
                                                            <Setter.Value>
                                                                <RotateTransform Angle="-270" />
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Trigger>

                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </ControlTemplate.Resources>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition x:Name="ColumnDefinition0" />
                                    <ColumnDefinition x:Name="ColumnDefinition1" Width="0" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition x:Name="RowDefinition0" Height="Auto" />
                                    <RowDefinition x:Name="RowDefinition1" Height="*" />
                                </Grid.RowDefinitions>
                                <Border
                                    HorizontalAlignment="Stretch"
                                    VerticalAlignment="Stretch"
                                    Background="{TemplateBinding Background}" />

                                <Border
                                    x:Name="HeaderSeparatorBorder"
                                    HorizontalAlignment="Stretch"
                                    VerticalAlignment="Stretch"
                                    Background="Transparent"
                                    BorderBrush="{Binding Path=(controls:TabControlAssist.TabHeaderInactiveBrush), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TabControl}}}"
                                    BorderThickness="0,0,0,1"
                                    Opacity="0.12" />

                                <Border
                                    x:Name="HeaderPanelBorder"
                                    HorizontalAlignment="Stretch"
                                    Background="Transparent">
                                    <!--<TabPanel x:Name="HeaderPanel" Panel.ZIndex="1" Margin="0,0,4,-1" IsItemsHost="True" KeyboardNavigation.TabIndex="1" Background="Transparent"
                                      HorizontalAlignment="{Binding Path=(controls:TabControlAssist.TabHeaderHorizontalAlignment), RelativeSource={RelativeSource TemplatedParent}}" />-->
                                    <!--  do not use a TabPanel because its behavior is different to the Material Design specs  -->
                                    <UniformGrid
                                        x:Name="HeaderPanel"
                                        HorizontalAlignment="{Binding Path=(controls:TabControlAssist.TabHeaderHorizontalAlignment), RelativeSource={RelativeSource TemplatedParent}}"
                                        VerticalAlignment="{Binding Path=(controls:TabControlAssist.TabHeaderVerticalAlignment), RelativeSource={RelativeSource TemplatedParent}}"
                                        Panel.ZIndex="1"
                                        Background="Transparent"
                                        FlowDirection="{TemplateBinding FlowDirection}"
                                        IsItemsHost="True"
                                        KeyboardNavigation.TabIndex="1"
                                        Rows="1" />
                                </Border>

                                <Border x:Name="PART_SelectedContentHostBorder" Grid.Row="1">
                                    <ContentPresenter x:Name="PART_SelectedContentHost" ContentSource="SelectedContent" />
                                </Border>
                            </Grid>

                            <ControlTemplate.Triggers>
                                <Trigger Property="TabStripPlacement" Value="Bottom">
                                    <Setter TargetName="HeaderPanelBorder" Property="Grid.Row" Value="1" />
                                    <Setter TargetName="PART_SelectedContentHostBorder" Property="Grid.Row" Value="0" />
                                    <Setter TargetName="RowDefinition0" Property="Height" Value="*" />
                                    <Setter TargetName="RowDefinition1" Property="Height" Value="Auto" />
                                    <Setter TargetName="HeaderPanelBorder" Property="Margin" Value="2,0,2,2" />
                                    <Setter TargetName="HeaderPanel" Property="Columns" Value="0" />
                                    <Setter TargetName="HeaderPanel" Property="Rows" Value="1" />
                                    <Setter TargetName="HeaderSeparatorBorder" Property="BorderThickness"
                                            Value="0,0,0,1" />
                                </Trigger>
                                <Trigger Property="TabStripPlacement" Value="Left">
                                    <Setter TargetName="HeaderPanelBorder" Property="Grid.Row" Value="0" />
                                    <Setter TargetName="PART_SelectedContentHostBorder" Property="Grid.Row" Value="0" />
                                    <Setter TargetName="HeaderPanelBorder" Property="Grid.Column" Value="0" />
                                    <Setter TargetName="PART_SelectedContentHostBorder" Property="Grid.Column"
                                            Value="1" />
                                    <Setter TargetName="ColumnDefinition0" Property="Width" Value="Auto" />
                                    <Setter TargetName="ColumnDefinition1" Property="Width" Value="*" />
                                    <Setter TargetName="RowDefinition0" Property="Height" Value="*" />
                                    <Setter TargetName="RowDefinition1" Property="Height" Value="0" />
                                    <Setter TargetName="HeaderPanelBorder" Property="Margin" Value="2,2,0,2" />
                                    <Setter TargetName="HeaderPanel" Property="Columns" Value="1" />
                                    <Setter TargetName="HeaderPanel" Property="Rows" Value="0" />
                                    <Setter TargetName="HeaderSeparatorBorder" Property="BorderThickness"
                                            Value="0,0,1,0" />
                                </Trigger>
                                <Trigger Property="TabStripPlacement" Value="Right">
                                    <Setter TargetName="HeaderPanelBorder" Property="Grid.Row" Value="0" />
                                    <Setter TargetName="PART_SelectedContentHostBorder" Property="Grid.Row" Value="0" />
                                    <Setter TargetName="HeaderPanelBorder" Property="Grid.Column" Value="1" />
                                    <Setter TargetName="PART_SelectedContentHostBorder" Property="Grid.Column"
                                            Value="0" />
                                    <Setter TargetName="ColumnDefinition0" Property="Width" Value="*" />
                                    <Setter TargetName="ColumnDefinition1" Property="Width" Value="Auto" />
                                    <Setter TargetName="RowDefinition0" Property="Height" Value="*" />
                                    <Setter TargetName="RowDefinition1" Property="Height" Value="0" />
                                    <Setter TargetName="HeaderPanelBorder" Property="Margin" Value="0,2,2,2" />
                                    <Setter TargetName="HeaderPanel" Property="Columns" Value="1" />
                                    <Setter TargetName="HeaderPanel" Property="Rows" Value="0" />
                                    <Setter TargetName="HeaderSeparatorBorder" Property="BorderThickness"
                                            Value="0,0,1,0" />
                                </Trigger>
                            </ControlTemplate.Triggers>

                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <x:Static x:Key="AppViewModel" Member="viewModels:AppViewModel.Instance" />
        </ResourceDictionary>
    </Application.Resources>
</Application>